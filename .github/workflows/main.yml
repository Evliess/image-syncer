## 1. 在云服务器上生成公钥与私钥
### 1.1 ssh-keygen -t rsa -f ./vmsshkey -P ''
### 1.2 将公钥添加到虚拟机认证文件中，使私钥可以远程SSH免密登录
### 1.2 cat vmsshkey.pub >> ~/.ssh/authorized_keys
### 1.2 chmod 600 ~/.ssh/authorized_keys
### 1.3 将私钥文件添加到Github的 Secret 中

name: Run Long-Running Docker Container

on:
  workflow_dispatch: # 允许手动触发
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 设置整个工作流的超时（可选，但建议）
# 它应该大于 job 的超时时间

jobs:
  run-docker-long-job:
    # 指定运行环境（根据情况选择）
    runs-on: ubuntu-latest # 使用 GitHub 托管的 Ubuntu 运行器
    # runs-on: self-hosted # 如果使用自托管运行器，使用这个标签

    # 为这个 job 设置 250 分钟（4小时10分钟）的超时
    timeout-minutes: 250

    steps:
      - name: Run long-running Docker container
        run: |
          ssh-keygen  -t rsa -f ./newsshkey -P ''
          mkdir -p  ~/.ssh
          cat newsshkey.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          ssh  -N -f -g -o ServerAliveInterval=60 -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null" -i ./newsshkey -D 9999 localhost 
          echo "${{ secrets.VM_SSH }}" > ./vmsshkey
          chmod 400 ./vmsshkey
          ssh -p 22 -i ./vmsshkey  -N -f -g -o ServerAliveInterval=60 -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null" -R 9999:localhost:9999  jiajia@120.55.96.31
          num=10800
          echo "shutdown in 10800 seconds"
          for i in `seq $num`
          do
            echo $i
            sleep 1
          done
          exit 0

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        # 可以设置超时时间，避免忘记断开连接导致资源浪费
        timeout-minutes: 15
        with:
            detached: true
