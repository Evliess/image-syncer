# 工作流名称
name: Sync-Images-to-DockerHub-Example
# 工作流运行时显示名称
run-name: ${{ github.actor }} is Sync Images to DockerHub.
# 怎样触发工作流
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 工作流程任务（通常含有一个或多个步骤）
jobs:
  syncimages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repos
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.9.1

    - name: Login to Docker Hub
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_NAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        logout: false
        
    - name: Use Skopeo Tools Sync Image to Docker Hub
      run: |
        #!/usr/bin/env bash
        #skopeo copy docker://gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest docker://waitplay/tektoncd-pipeline-cmd-git-init:latest
        #skopeo copy docker://gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.11.1 docker://waitplay/tektoncd-pipeline-cmd-imagedigestexporter:v0.11.1

        curl -L  https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml -o TektonCD-Pipelines.yaml
        DOCKER_USERHUB=waitplay/tektoncd-pipeline-core
        grep "image: " TektonCD-Pipelines.yaml | cut -f 2,3 -d ":" | cut -f 1 -d "@" > TektonCD-Pipelines-image.txt
        grep "git-image" TektonCD-Pipelines.yaml | sed -e "s#,#\n#g" -e 's/"//g' | grep "gcr.io" | cut -f 1 -d "@" >> TektonCD-Pipelines-image.txt
        for i in `cat TektonCD-Pipelines-image.txt`;do
          echo  skopeo copy --all docker://${i} docker://${DOCKER_USERHUB}${i##*/} >> target-images
          sed -i "s#${i}#${DOCKER_USERHUB}${i##*/}#g" TektonCD-Pipelines.yaml
        done
        chmod 777 target-images && source ./target-images
        cat TektonCD-Pipelines.yaml
        
